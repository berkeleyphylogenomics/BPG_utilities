#!/usr/bin/python
"""
Note: running this script will generate a number of files -
qsub_cache_families_0, qsub_cache_families_1, etc.. Also created
will be a file - start_qsub_scripts.sh - that is used to actually 
place the jobs on the queue. chmod 755 this file and run it. 
After the jobs have been placed on the queue, remove all the files
generated by this script. Don't commit them to version control!
- Shailen Tuli
"""

import math
import subprocess
import os.path
import sys
from pfacts003.phylofacts.models import *

error_message = "You need to specify the number of queued jobs as your first argument"

if len(sys.argv) < 2:
    print error_message
    sys.exit(1)

num_queued_jobs = 0

try:
    num_queued_jobs = int(sys.argv[1])
except:
    print error_message
    sys.exit(1)

families = Family.objects.order_by("id")
num_families = len(families)
num_families_to_cache = math.ceil(num_families / float(num_queued_jobs))
caching_script_file = os.path.abspath("cache_families.py")

content_template = '''#PBS -e /clusterfs/ohana/software/webserver/incoming_test/cache_families_errors.log
#PBS -o /clusterfs/ohana/software/webserver/incoming_test/cache_families_output.log
#PBS -N	%s
#PBS -l nodes=1:ppn=1,walltime=24:00:00

source /home/shailen/.bashrc
development
source /clusterfs/ohana/software/test/bin/activate

python %s %d %d'''

start_qsub_jobs_file = open('start_qsub_scripts.sh','w')

for i in range(num_queued_jobs):
   file = "qsub_cache_families_%s" % str(i)
   start_qsub_jobs_file.write("qsub %s -q library\n" % file)
   fh = open(file, 'w')
   job_name = "cache_fam_%s" % str(i)
   starting_family_id = i * int(num_families_to_cache)
   content = content_template % (job_name, caching_script_file, starting_family_id, int(num_families_to_cache))
   print content
   fh.write(content)
  
