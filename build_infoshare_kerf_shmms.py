#!/usr/bin/python
# Build HMMs for all subfamilies generated by kerf, at all
# %ID levels they were built at, using SCI-PHY's information sharing
# protocol

import os, sys, glob
from matchmaker.shmm_shmm_lib import *

out_filename = "shmm.out"

# process command line
if len(sys.argv) < 3:
  print "Usage: %s <percent_id> <seed_id>" % sys.argv[0]
  sys.exit(0)
percent_id = int(sys.argv[1])
seed_id = sys.argv[2]

# Go to the directory where the kerf subfamilies are stored
os.chdir(kerf_subfam_dir(seed_id, percent_id))

# Make output dir for the HMMs, if it doesn't yet exist
hmmdir = kerf_infoshare_hmm_dir(seed_id, percent_id)
make_dir_exist(hmmdir)

# If there are no subfamilies, exit
subfam_count = len(glob.glob("%s*.fa" % (seed_id)))
if subfam_count == 0:
  print "%s: no %s kerf%d subfams to create shmms for." \
     % (sys.argv[0], seed_id, percent_id)
  sys.exit(0)

os.chdir(hmmdir)

if sciphy_hmms_completed(seed_id, hmmdir, out_filename):
  print "SCI-PHY infoshare shmms already created for kerf%d on %s" \
     % (percent_id, seed_id)
else:

  # remove any .mod files that were leftover by an incomplete run
  hmm_file_spec = "%s.*.mod" % (seed_id)
  if len(glob.glob(hmm_file_spec)) > 0:
    cmd = "/bin/rm %s" %  (hmm_file_spec)
    os.system(cmd)

  # if symbolic link was not created (as it should have been) by
  # script that creates ascii ghmms, create it now
  if not os.path.exists("%s.mod" % seed_id):
    os.symlink("../../ascii_ghmm/%s.mod" % seed_id, "%s.mod" % seed_id)

  # Run SCI-PHY's information-sharing protocol to create HMMs
  # Can do this in a single command using kerf.seqs in parent dir
  cmd ="%s %s -i ../kerf.seqs -dist tre -subfam ecost -d 1 -no_tree >& %s" \
            % (sciphy_cmd(), seed_id, out_filename)
  sciphy_complete = try_cmd_mult_times(cmd, 3)

  # give output HMM files more descriptive filenames
  mmv_cmd = 'mmv -d "%s.*.mod" "%s.infokerf%s.sf#1.mod"' \
              % (seed_id, seed_id, percent_id)
  print mmv_cmd
  os.system(mmv_cmd)


"""
# Ruchira's Fall 2007 code for this script
# worked on all kerf dirs, not just one
main_dir = os.path.join(cur_dir(), seed_id)
os.chdir(main_dir)
kerfdirs = glob.glob("kerf[1-9][0-9]")
for kerfdir in kerfdirs:
  kerfpercent = os.path.split(kerfdir)[1][4:6]
  #kerfsharedir = os.path.join(kerfdir, "sciphy")
  kerfsharedir = kerf_info_hmm_dir(seed_id, int(kerfpercent))
  make_dir_exist(kerfsharedir)
  os.chdir(kerfsharedir)
  os.system("SCI-PHY %s -i ../kerf.seqs -dist tre -subfam ecost -d 1 -no_tree" \
            % seed_id)
  # give HMM files more descriptive filenames
  mmv_cmd = 'mmv "%s.*.mod" "%s.infokerf%s.#1.mod"' \
              % (seed_id, seed_id, kerfpercent)
  print mmv_cmd
  os.system(mmv_cmd)
  os.chdir(main_dir)
"""

